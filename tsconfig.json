{
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "target": "ES2023",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./",
    "incremental": true,
    "skipLibCheck": true,
    "strictNullChecks": true,
    "forceConsistentCasingInFileNames": true,
    "noImplicitAny": true,
    "strictBindCallApply": false,
    "noFallthroughCasesInSwitch": false
  }
}

// {
//   "compilerOptions": {
//     "module": "commonjs",                      // âœ… Required for Node.js compatibility (Nest uses this)
//     "declaration": true,                       // âœ… Useful if you publish your code as a library, can be false otherwise
//     "removeComments": true,                    // âœ… Optional for clean build output
//     "emitDecoratorMetadata": true,             // âœ… Required by NestJS for dependency injection
//     "experimentalDecorators": true,            // âœ… Required by NestJS
//     "allowSyntheticDefaultImports": true,      // âœ… Useful for flexibility with module imports
//     "target": "ES2023",                        // âœ… Fine; modern JS target, compatible with Node.js 18+
//     "sourceMap": true,                         // âœ… Useful for debugging
//     "outDir": "./dist",                        // âœ… Standard; compiled files go here
//     "baseUrl": "./",                           // âœ… Enables path mapping
//     "incremental": true,                       // âœ… Speeds up subsequent builds
//     "skipLibCheck": true,                      // âœ… Faster builds; skips checking `.d.ts` files
//     "strictNullChecks": true,                  // âœ… Good for catching null/undefined issues
//     "forceConsistentCasingInFileNames": true,  // âœ… Prevents weird bugs on case-sensitive file systems
//     "noImplicitAny": false,                    // ðŸ”¸ Optional: true makes you explicitly type everything, can catch more bugs
//     "strictBindCallApply": false,              // ðŸ”¸ Fine to leave off unless doing heavy function binding
//     "noFallthroughCasesInSwitch": false        // ðŸ”¸ Leave off unless you're doing complex switch logic
//   }
// }
